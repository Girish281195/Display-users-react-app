{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimelineMarkersConsumer = exports.TimelineMarkersProvider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _createReactContext2 = _interopRequireDefault(require(\"create-react-context\"));\n\nvar _generic = require(\"../utility/generic\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    if (i % 2) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultContextState = {\n  markers: [],\n  subscribeMarker: function subscribeMarker() {\n    // eslint-disable-next-line\n    console.warn('default subscribe marker used');\n    return _generic.noop;\n  }\n};\n\nvar _createReactContext = (0, _createReactContext2[\"default\"])(defaultContextState),\n    Consumer = _createReactContext.Consumer,\n    Provider = _createReactContext.Provider; // REVIEW: is this the best way to manage ids?\n\n\nvar _id = 0;\n\nvar createId = function createId() {\n  _id += 1;\n  return _id + 1;\n};\n\nvar TimelineMarkersProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(TimelineMarkersProvider, _React$Component);\n\n  function TimelineMarkersProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TimelineMarkersProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimelineMarkersProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribeToMarker\", function (newMarker) {\n      newMarker = _objectSpread({}, newMarker, {\n        // REVIEW: in the event that we accept id to be passed to the Marker components, this line would override those\n        id: createId()\n      });\n\n      _this.setState(function (state) {\n        return {\n          markers: [].concat(_toConsumableArray(state.markers), [newMarker])\n        };\n      });\n\n      return {\n        unsubscribe: function unsubscribe() {\n          _this.setState(function (state) {\n            return {\n              markers: state.markers.filter(function (marker) {\n                return marker.id !== newMarker.id;\n              })\n            };\n          });\n        },\n        getMarker: function getMarker() {\n          return newMarker;\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdateMarker\", function (updateMarker) {\n      var markerIndex = _this.state.markers.findIndex(function (marker) {\n        return marker.id === updateMarker.id;\n      });\n\n      if (markerIndex < 0) return;\n\n      _this.setState(function (state) {\n        return {\n          markers: [].concat(_toConsumableArray(state.markers.slice(0, markerIndex)), [updateMarker], _toConsumableArray(state.markers.slice(markerIndex + 1)))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      markers: [],\n      subscribeMarker: _this.handleSubscribeToMarker,\n      updateMarker: _this.handleUpdateMarker\n    });\n\n    return _this;\n  }\n\n  _createClass(TimelineMarkersProvider, [{\n    key: \"render\",\n    value: function render() {\n      return _react[\"default\"].createElement(Provider, {\n        value: this.state\n      }, this.props.children);\n    }\n  }]);\n\n  return TimelineMarkersProvider;\n}(_react[\"default\"].Component);\n\nexports.TimelineMarkersProvider = TimelineMarkersProvider;\n\n_defineProperty(TimelineMarkersProvider, \"propTypes\", {\n  children: _propTypes[\"default\"].element.isRequired\n});\n\nvar TimelineMarkersConsumer = Consumer;\nexports.TimelineMarkersConsumer = TimelineMarkersConsumer;","map":null,"metadata":{},"sourceType":"script"}