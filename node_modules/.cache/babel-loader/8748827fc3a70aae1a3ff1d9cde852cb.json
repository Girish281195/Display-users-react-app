{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _domHelpers = require(\"../utility/dom-helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ScrollElement = /*#__PURE__*/function (_Component) {\n  _inherits(ScrollElement, _Component);\n\n  function ScrollElement() {\n    var _this;\n\n    _classCallCheck(this, ScrollElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollElement).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function () {\n      var scrollX = _this.scrollComponent.scrollLeft;\n\n      _this.props.onScroll(scrollX);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refHandler\", function (el) {\n      _this.scrollComponent = el;\n\n      _this.props.scrollRef(el);\n\n      if (el) {\n        el.addEventListener('wheel', _this.handleWheel, {\n          passive: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleWheel\", function (e) {\n      var traditionalZoom = _this.props.traditionalZoom; // zoom in the time dimension\n\n      if (e.ctrlKey || e.metaKey || e.altKey) {\n        e.preventDefault();\n        var parentPosition = (0, _domHelpers.getParentPosition)(e.currentTarget);\n        var xPosition = e.clientX - parentPosition.x;\n        var speed = e.ctrlKey ? 10 : e.metaKey ? 3 : 1; // convert vertical zoom to horiziontal\n\n        _this.props.onWheelZoom(speed, xPosition, e.deltaY);\n      } else if (e.shiftKey) {\n        e.preventDefault(); // shift+scroll event from a touchpad has deltaY property populated; shift+scroll event from a mouse has deltaX\n\n        _this.props.onScroll(_this.scrollComponent.scrollLeft + (e.deltaY || e.deltaX)); // no modifier pressed? we prevented the default event, so scroll or zoom as needed\n\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (e) {\n      if (e.button === 0) {\n        _this.dragStartPosition = e.pageX;\n        _this.dragLastPosition = e.pageX;\n\n        _this.setState({\n          isDragging: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (e) {\n      // this.props.onMouseMove(e)\n      //why is interacting with item important?\n      if (_this.state.isDragging && !_this.props.isInteractingWithItem) {\n        _this.props.onScroll(_this.scrollComponent.scrollLeft + _this.dragLastPosition - e.pageX);\n\n        _this.dragLastPosition = e.pageX;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseUp\", function () {\n      _this.dragStartPosition = null;\n      _this.dragLastPosition = null;\n\n      _this.setState({\n        isDragging: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function () {\n      // this.props.onMouseLeave(e)\n      _this.dragStartPosition = null;\n      _this.dragLastPosition = null;\n\n      _this.setState({\n        isDragging: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchStart\", function (e) {\n      if (e.touches.length === 2) {\n        e.preventDefault();\n        _this.lastTouchDistance = Math.abs(e.touches[0].screenX - e.touches[1].screenX);\n        _this.singleTouchStart = null;\n        _this.lastSingleTouch = null;\n      } else if (e.touches.length === 1) {\n        e.preventDefault();\n        var x = e.touches[0].clientX;\n        var y = e.touches[0].clientY;\n        _this.lastTouchDistance = null;\n        _this.singleTouchStart = {\n          x: x,\n          y: y,\n          screenY: window.pageYOffset\n        };\n        _this.lastSingleTouch = {\n          x: x,\n          y: y,\n          screenY: window.pageYOffset\n        };\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchMove\", function (e) {\n      var _this$props = _this.props,\n          isInteractingWithItem = _this$props.isInteractingWithItem,\n          width = _this$props.width,\n          onZoom = _this$props.onZoom;\n\n      if (isInteractingWithItem) {\n        e.preventDefault();\n        return;\n      }\n\n      if (_this.lastTouchDistance && e.touches.length === 2) {\n        e.preventDefault();\n        var touchDistance = Math.abs(e.touches[0].screenX - e.touches[1].screenX);\n        var parentPosition = (0, _domHelpers.getParentPosition)(e.currentTarget);\n        var xPosition = (e.touches[0].screenX + e.touches[1].screenX) / 2 - parentPosition.x;\n\n        if (touchDistance !== 0 && _this.lastTouchDistance !== 0) {\n          onZoom(_this.lastTouchDistance / touchDistance, xPosition / width);\n          _this.lastTouchDistance = touchDistance;\n        }\n      } else if (_this.lastSingleTouch && e.touches.length === 1) {\n        e.preventDefault();\n        var x = e.touches[0].clientX;\n        var y = e.touches[0].clientY;\n        var deltaX = x - _this.lastSingleTouch.x;\n        var deltaX0 = x - _this.singleTouchStart.x;\n        var deltaY0 = y - _this.singleTouchStart.y;\n        _this.lastSingleTouch = {\n          x: x,\n          y: y\n        };\n        var moveX = Math.abs(deltaX0) * 3 > Math.abs(deltaY0);\n        var moveY = Math.abs(deltaY0) * 3 > Math.abs(deltaX0);\n\n        if (deltaX !== 0 && moveX) {\n          _this.props.onScroll(_this.scrollComponent.scrollLeft - deltaX);\n        }\n\n        if (moveY) {\n          window.scrollTo(window.pageXOffset, _this.singleTouchStart.screenY - deltaY0);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchEnd\", function () {\n      if (_this.lastTouchDistance) {\n        _this.lastTouchDistance = null;\n      }\n\n      if (_this.lastSingleTouch) {\n        _this.lastSingleTouch = null;\n        _this.singleTouchStart = null;\n      }\n    });\n\n    _this.state = {\n      isDragging: false\n    };\n    return _this;\n  }\n  /**\n   * needed to handle scrolling with trackpad\n   */\n\n\n  _createClass(ScrollElement, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.scrollComponent) {\n        this.scrollComponent.removeEventListener('wheel', this.handleWheel);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          width = _this$props2.width,\n          height = _this$props2.height,\n          children = _this$props2.children;\n      var isDragging = this.state.isDragging;\n      var scrollComponentStyle = {\n        width: \"\".concat(width, \"px\"),\n        height: \"\".concat(height + 20, \"px\"),\n        //20px to push the scroll element down off screen...?\n        cursor: isDragging ? 'move' : 'default',\n        position: 'relative'\n      };\n      return _react[\"default\"].createElement(\"div\", {\n        ref: this.refHandler,\n        className: \"rct-scroll\",\n        style: scrollComponentStyle,\n        onMouseDown: this.handleMouseDown,\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseLeave: this.handleMouseLeave,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleTouchEnd,\n        onScroll: this.handleScroll\n      }, children);\n    }\n  }]);\n\n  return ScrollElement;\n}(_react.Component);\n\n_defineProperty(ScrollElement, \"propTypes\", {\n  children: _propTypes[\"default\"].element.isRequired,\n  width: _propTypes[\"default\"].number.isRequired,\n  height: _propTypes[\"default\"].number.isRequired,\n  traditionalZoom: _propTypes[\"default\"].bool.isRequired,\n  scrollRef: _propTypes[\"default\"].func.isRequired,\n  isInteractingWithItem: _propTypes[\"default\"].bool.isRequired,\n  onZoom: _propTypes[\"default\"].func.isRequired,\n  onWheelZoom: _propTypes[\"default\"].func.isRequired,\n  onScroll: _propTypes[\"default\"].func.isRequired\n});\n\nvar _default = ScrollElement;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}